import px

def pod_cpu_usage():
    """
    Get actual CPU usage for pods using Pixie's built-in pod stats
    """
    # Get pod stats from Pixie
    df = px.DataFrame(table='process_stats', start_time='-30s')
    
    # Add pod information by joining with k8s metadata
    df.pod = px.pod_name_to_pod_name(df.upid)
    df.namespace = px.pod_name_to_namespace(df.upid)
    df.container = px.upid_to_container_name(df.upid)
    
    # Filter out non-pod processes
    df = df[df.pod != '']
    
    # Calculate CPU usage percentage
    df.cpu_usage = px.DurationNanos(df.cpu_ktime_ns + df.cpu_utime_ns)
    
    # Group by pod
    grouped = df.groupby(['pod', 'namespace']).agg(
        cpu_ktime_ns_sum=('cpu_ktime_ns', px.sum),
        cpu_utime_ns_sum=('cpu_utime_ns', px.sum),
        rss_bytes_max=('rss_bytes', px.max),
        num_samples=('pod', px.count)
    )
    
    # Filter for kernel-gossip namespace
    grouped = grouped[grouped.namespace == 'kernel-gossip']
    
    # Add timestamp
    grouped.time_ = px.now()
    
    return grouped[['time_', 'pod', 'namespace', 'cpu_ktime_ns_sum', 
                    'cpu_utime_ns_sum', 'rss_bytes_max', 'num_samples']]

px.display(pod_cpu_usage(), 'pod_cpu')